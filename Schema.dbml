// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table user {
  username varchar(16) [not null, unique]
  user_id integer [primary key] // from a sequence or AUTO_INCREMENT
  balance numeric(19, 2) [not null, default: 0]
  created_at timestamp [not null]
}

Table transaction_history {
  transaction_id integer [primary key] // from a sequence or AUTO_INCREMENT
  user_id integer [ref: > user.user_id, not null]
  trasaction_type enum('deposit', 'withdrawal') [not null]
  amount numeric(19, 2) [not null]
}

Table games {
  game_id integer [primary key] // from a sequence or AUTO_INCREMENT
  game_type enum('blackjack', 'slots') [not null]
  user_id integer [ref: > user.user_id, not null]
  bet numeric(19, 2) [not null]
  active bool [not null]
  winnings numeric(19, 2) [default: null]
}

Table slots_symbols {
  symbol_id integer [primary key]
  symbol_name varchar(20) [unique, not null]
}

// Generated Table With Every Possible Slots Game
// INCLUDING payout_id = 0 (Active Game With NULL Entries)
Table slots_payouts {
  payout_id integer [primary key] // from a sequence or AUTO_INCREMENT
  payout numeric(10, 5) [not null, default: 1.0]
  roll_1 integer [ref: > slots_symbols.symbol_id, default: null]
  roll_2 integer [ref: > slots_symbols.symbol_id, default: null]
  roll_3 integer [ref: > slots_symbols.symbol_id, default: null]
}

Table slots {
  game_id integer [primary key, ref: - games.game_id, not null]
  user_id integer [ref: > user.user_id, not null]
  bet numeric(19, 2) [not null]
  payout_id integer [ref: > slots_payouts.payout_id]
  winnings numeric(19, 2) [default: null]
}

Table blackjack {
  game_id integer [primary key, ref: - games.game_id, unique, not null]
  user_id integer [ref:  > user.user_id, not null]
  bet numeric(19, 2) [not null]
  player_hand varchar(44) [default: null]
  dealer_hand varchar(22) [default: null]

  /* Example:
    Hand With [3 of Clubs, 2 of Diamonds, Ace of Spades, King of Hearts, 4 of Spades]
    player_hand = "3C2DASKH4S"
    If Double Down, Split Hand With '.' As A Delimiter
  */
}
